/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package test;

import (
	"github.com/BBN-D/avro-golang-example/src"
)
import "errors"

// MD5Schema is an AvroSchema object
var MD5Schema = src.AvroRegisterSchema(MD5FromRecord, "{\"type\":\"fixed\",\"name\":\"MD5\",\"namespace\":\"org.apache.avro.test\",\"doc\":\"An MD5 hash.\",\"size\":16,\"foo\":\"bar\"}")

/** An MD5 hash. */
type MD5 struct {
	Bytes []byte // length 16
}

// ToAvroContainer converts MD5 to a byte array
func (this *MD5) ToAvroContainer() ([]byte, error) {
	return src.ToAvroContainer([]src.AvroObject{this})
}

// ToJSON converts MD5 to a JSON string
func (this *MD5) ToJSON(prettyPrint bool) (string, error) {
	record, err := this.ToRecord()
	if err != nil {
		return "", errors.New("ToJSON: " + err.Error())
	}
	return record.ToJSON(prettyPrint)
}

// MD5FromAvroContainer returns a slice
// of MD5 objects from a byte array
func MD5FromAvroContainer(bytes []byte) ([]src.AvroObject, error) {
	return src.FromAvroContainer(bytes, MD5Schema)
}

//
// AvroObject interface; should not need to use these directly
//

func (this *MD5) GetSchema() *src.AvroSchema {
	return MD5Schema
}

func MD5FromRecord(record *src.AvroRecord) (src.AvroObject, error) {
	var err error
	obj := new(MD5)
	obj.Bytes, err = record.GetFixed()
	if err != nil {
		return nil, errors.New("MD5: " + err.Error())
	}
	return obj, nil
}

func (this *MD5) ToRecord() (*src.AvroRecord, error) {
	
	record, err := src.RecordFromFixed(this.GetSchema(), this.Bytes)
	if err != nil {
		return nil, errors.New("MD5: " + err.Error())
	}

	return record, nil
}
